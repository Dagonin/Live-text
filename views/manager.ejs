<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Text Live</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.5/css/bulma.min.css" />
    <script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>
    <link rel="stylesheet" href="/css/tree.css" />
</head>

<body>
    <nav class="navbar has-background-info" role="navigation" aria-label="main navigation">
        <button id="but" onclick="navselect()">Dodaj Pytanie</button>
    </nav>
    <div class="columns">
        <div class="column list is-hoverable is-shadowless" id="tree"></div>
        <div class="maincont column is-three-quarters has-background-success">
        </div>
    </div>


</body>
<script src="/js/tree.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dragula/3.7.2/dragula.js" integrity="sha256-rVf3H94DblhP4Z6wLSa2mpMwRS5qePBWykE6QWPOaO0=" crossorigin="anonymous"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
<script>
    let chapters = <%-JSON.stringify(chapter) %> ;
    let questions = <%-JSON.stringify(question) %> ;

    generateTree(chapters, questions);
    setClickEventOnTreeItems();
    
    var stop = true;
    $("p.list-item").on("drag", function (e) {

        stop = true;

        if (e.originalEvent.clientY < 150) {
            stop = false;
            scroll(-1)
        }

        if (e.originalEvent.clientY > ($(window).height() - 150)) {
            stop = false;
            scroll(1)
        }

    });

    $("p.list-item").on("dragend", function (e) {
         stop = true;
    });

    var scroll = function (step) {
        var scrollY = $(window).scrollTop();
        $(window).scrollTop(scrollY + step);
        if (!stop) {
            setTimeout(function () { scroll(step) }, 20);
        }
    }

    // DRAG & DROP
    let srcid;

    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        srcid = ev.srcElement.id;
    }

    function drop(ev) {
        ev.preventDefault();

        if (ev.path[3].className.includes('cont') && ev.path[1].className.includes('icon')) {
            socket.emit("move", socket.id, srcid, ev.path[3].id, `<%= user.id %>`);
        } else if (ev.path[4].className.includes('cont') && ev.path[2].className.includes('icon')) {
            socket.emit("move", socket.id, srcid, ev.path[4].id, `<%= user.id %>`);
        } else if (ev.target.className == "dir-header") {
            socket.emit("move", socket.id, srcid, ev.target.parentElement.id, `<%= user.id %>`);

        } else if (ev.target.className.includes("cont")) {
            socket.emit("move", socket.id, srcid, ev.target.id, `<%= user.id %>`);
        } else if (ev.target.className.includes("list-item")) {
            socket.emit("move", socket.id, srcid, ev.target.parentElement.parentElement.parentElement.id, `<%= user.id %>`);
        }
    }



    // SELECTMENU
    function navselect(){
        $(".maincont").html(`<select onchange="select(this.options[this.selectedIndex].value)">
<option style="display:none" disabled selected value> -- Wybierz -- </option>
                <option value="open">Pytanie otwarte</option>
                <option value="single">Pytanie pojedyńczego wyboru</option>
                <option value="chapter">Rozdział</option>
                <option value="multi">Pytanie wielokrotnego wyboru</option>
            </select>
            <div class="selectedcontent">

            </div>`)
    }
    function select(selected){
            let container = $(".selectedcontent");
            if(selected == 'single'){
                container.html(`               <div>
                <label  for="name">Etykieta pytania</label>
                <input id="singlename" type="text" name="name">  
                </div>              
                <div>
                <label for="content">Treść pytania</label>
                <input id="singlecontent" type="text" name="content">
                </div>
                <div>
                <label for="first"><input id="first" type="radio" value="first" name="ans" checked>Pierwsza odpowiedź</label>
                <input class='a' id="firstans" type="text" name="first"> 
                </div>
                <div>
                <label for="second"><input type="radio" id="second" value="second" name="ans">Druga odpowiedź</label>
                <input class='a' id="secondans" type="text" name="second"> 
                </div>
                <button id='possibility' onclick="addpossibility()">Dodaj możliwą odpowiedź</button>
                <button onclick="addsingle()">Dodaj</button>`);
            } else if(selected == 'multi'){
                container.html(`               <div>
                <label  for="name">Etykieta pytania</label>
                <input id="multiname" type="text" name="name">  
                </div>              
                <div>
                <label for="content">Treść pytania</label>
                <input id="multicontent" type="text" name="content">
                </div>
                <div>
                <label for="first"><input id="first" type="checkbox" value="first" name="ans" checked>Pierwsza odpowiedź</label>
                <input class='a' id="firstans" type="text" name="first"> 
                </div>
                <div>
                <label for="second"><input type="checkbox" id="second" value="second" name="ans">Druga odpowiedź</label>
                <input class='a' id="secondans" type="text" name="second"> 
                </div>
                <button id='possibility' onclick="addpossibility1()">Dodaj możliwą odpowiedź</button>
                <button onclick="addmulti()">Dodaj</button>`);
            } else if(selected == 'open'){
                container.html(`<div><label  for="name">Etykieta pytania</label>
                <input id="openname" type="text" name="name">                
                </div><div><label for="content">Treść pytania</label>
                <input id="opencontent" type="text" name="content"></div>
                <button onclick="addopen()">Dodaj</button>`);
            } else if(selected == 'chapter'){
                container.html(`<div><label  for="name">Nazwa rodziału</label>
                <input id="chaptername" type="text" name="name">                
               </div> <div><label for="content">Opis rodziału</label>
                <input id="chaptercontent" type="text" name="content"></div>
                <button onclick="addchapter()">Dodaj</button>`)                
            }
                
                
                
            }
                
                
    function addpossibility(){
        let num = $(".selectedcontent div").length-2;
        if(num==2){
            $(`               <div class="third"><label for="third"><input id="third" type="radio" value="third" name="ans">Trzecia odpowiedź </label>
                <input class='a' id="thirdans" type="text" name="third"><button onclick="del(this.parentElement)">Usuń</button>
                </div>`).insertBefore('button#possibility')
        }
        if(num==3){
                        $(`<div class="fourth"><label for="fourth"><input  id="fourth" type="radio" value="fourth" name="ans">Czwarta odpowiedź</label>
                <input class='a' id="fourthans" type="text" name="third"><button onclick="del(this.parentElement)">Usuń</button>
                </div>`).insertBefore('button#possibility')
        }
    }

        function addpossibility1(){
        let num = $(".selectedcontent div").length-2;
        if(num==2){
            $(`               <div class="third"><label for="third"><input id="third" type="checkbox" value="third" name="ans">Trzecia odpowiedź </label>
                <input class='a' id="thirdans" type="text" name="third"><button onclick="del1(this.parentElement)">Usuń</button>
                </div>`).insertBefore('button#possibility')
        }
        if(num==3){
                        $(`<div class="fourth"><label for="fourth"><input  id="fourth" type="checkbox" value="fourth" name="ans">Czwarta odpowiedź</label>
                <input class='a' id="fourthans" type="text" name="third"><button onclick="del1(this.parentElement)">Usuń</button>
                </div>`).insertBefore('button#possibility')
        }
    }

    function del(e){
        if($(".selectedcontent div").length-2==4&&e.className=="third"){
                        $(`<div class="third"><label for="third"><input id="third" type="radio" value="third" name="ans">Trzecia odpowiedź</label>
                <input class='a' id="thirdans" value="`+$("#fourthans").val()+`" type="text" name="third"><button onclick="del(this.parentElement)">Usuń</button>
                </div>`).insertBefore('button#possibility')
        }
            $(".fourth").remove();
            
        
        e.remove();
    }
    
        function del1(e){
        if($(".selectedcontent div").length-2==4&&e.className=="third"){
                        $(`<div class="third"><label for="third"><input id="third" type="checkbox" value="third" name="ans">Trzecia odpowiedź</label>
                <input class='a' id="thirdans" value="`+$("#fourthans").val()+`" type="text" name="third"><button onclick="del(this.parentElement)">Usuń</button>
                </div>`).insertBefore('button#possibility')
        }
            $(".fourth").remove();
            
        
        e.remove();
    }
    /////// SOCKET.IO

    const socket = io();
    socket.on('connect', () => {
        console.log(socket.id);
    })

    function addchapter(){
        socket.emit("dodaj", socket.id, $('#chaptername').val(), "addchapter", $('#chaptercontent').val(), undefined, undefined, `<%= user.id %>`);
                    
    }
    
    function addsingle(){
        let arr = [];
        $(".a").each(function(){
            arr.push(this.value)
        })
        let ansid = $("input[name='ans']:checked").attr('id');
        socket.emit("dodaj", socket.id, $('#singlename').val(), "single", $('#singlecontent').val(), arr, $("#"+ansid+"ans").val(), `<%= user.id %>`);
    }
                    
    function addopen(){
        socket.emit("dodaj", socket.id, $('#openname').val(), "open",$('#opencontent').val(), undefined, undefined, `<%= user.id %>`);
                    
        }
    function addmulti(){
        let arr = [];
        let correct = [];
        $(".a").each(function(){
            arr.push(this.value)
        })
        $("input[name='ans']:checked").each(function(){
            correct.push( $("#"+this.value+"ans").val())
        })
        socket.emit("dodaj", socket.id, $('#multiname').val(), "multi", $('#multicontent').val(), arr,correct, `<%= user.id %>`);
    }
    function add(name, type, content, options, correct) {
        socket.emit("dodaj", socket.id, name, type, content, options, correct, `<%= user.id %>`);
                    
    }

    socket.on('cChapter', (cChapter) => {

        chapters.push(cChapter);
        $(`<div class='dir cont list-item' id="` +
            cChapter._id +
            `"ondrop="drop(event, this)" ondragover="allowDrop(event)">
    <div class='dir-header' db-id=` +
            cChapter._id +
            `>
      <span class='icon'><i class='fas fa-folder'></i></span> ` +
            cChapter.name +
            `
      <span class='icon is-pulled-right arrow'
        ><i class='fas fa-angle-right'></i
      ></span>
    </div>
    <div class='dir-items'><div class="dir-items-wrapper">
            </div></div></div>`).insertBefore('div#unassigned')

        setClickEventOnTreeItems();




    })

    socket.on('cQuestion', (question) => {
        questions.push(question);
        let div = $("#unassigned").find('.dir-items-wrapper');
        if (question.type == "open") {
           div.append(
                `<p class="list-item" id="` +
                question._id +
                `"title="` +
                question.content +
                `" draggable = 'true' ondragstart="drag(event)">
      <span class="icon"> <i class="fas fa-calendar-minus"></i> </span
      >` +
                question.name +
                `</p>`
            )
            if ($("#unassigned").hasClass("opened-item")) {
                $("#unassigned").find('.dir-items').css('height', '+=42,5');
            }
        } else if (question.type == "single") {
            div.append(
                `<p class="list-item" id="` +
                question._id +
                `"title="` +
                question.content +
                `" draggable = 'true' ondragstart="drag(event)">
      <span class="icon"> <i class="fas fa-calendar-check"></i> </span
      >` +
                question.name +
                `</p>`
            )
            if ($("#unassigned").hasClass("opened-item")) {
                $("#unassigned").find('.dir-items').css('height', '+=42,5');
            }
        } else if (question.type == "multi") {
            div.append(
                `<p class="list-item" id="` +
                question._id +
                `"title="` +
                question.content +
                `" draggable = 'true' ondragstart="drag(event)">
        <span class="icon"> <i class="fas fa-calendar-alt"></i> </span
        >` +
                question.name +
                `</p>`
            )
        }
        if ($("#unassigned").hasClass("opened-item")) {
            $("#unassigned").find('.dir-items').css('height', '+=42,5');
        }

    })

    socket.on('refreshTree', (src, target, sourcediv, newChapters, newQuestions) => {
        chapters = newChapters;
        questions = newQuestions;
        if (sourcediv != undefined) {

            const srcindex = chapters.findIndex(x => x._id === sourcediv);
            const srcdir = chapters[srcindex].questions;
            const srccontent = generateTreeItems(srcdir, questions);
            $("#" + sourcediv).find('.dir-items-wrapper').html(srccontent);
            if ($("#" + sourcediv).hasClass("opened-item")) {
                $("#" + sourcediv).find('.dir-items').css('height', '-=42,5');
            }

        } else {
            const srcdir = [];
            newQuestions.forEach(question => {
                if (!question.chapter) {
                    srcdir.push(question._id)
                }
            });
            const srccontent = generateTreeItems(srcdir, questions);
            $("#unassigned").find('.dir-items-wrapper').html(srccontent);
            if ($("#unassigned").hasClass("opened-item")) {
                $("#unassigned").find('.dir-items').css('height', '-=42,5');
            }
        }

        if (target != 'unassigned') {
            const targetindex = chapters.findIndex(x => x._id === target);
            const targetdir = chapters[targetindex].questions;
            const targetcontent = generateTreeItems(targetdir, questions);
            $("#" + target).find('.dir-items-wrapper').html(targetcontent);
            if ($("#" + target).hasClass("opened-item")) {
                $("#" + target).find('.dir-items').css('height', '+=42,5');
            }
        } else {
            const targetdir = [];
            newQuestions.forEach(question => {
                if (!question.chapter) {
                    targetdir.push(question._id)
                }
            });
            const targetcontent = generateTreeItems(targetdir, questions);
            $("#unassigned").find('.dir-items-wrapper').html(targetcontent);
            if ($("#unassigned").hasClass("opened-item")) {
                $("#unassigned").find('.dir-items').css('height', '+=42,5');
            }



        }



    })

</script>

</html>
