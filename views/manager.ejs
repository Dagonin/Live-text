<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Text Live</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.5/css/bulma.min.css" />
    <script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>
    <link rel="stylesheet" href="/css/tree.css" />
</head>

<body>
    <nav class="navbar has-background-info" role="navigation" aria-label="main navigation">
        <button onclick="navselect()">Dodaj Pytanie</button>
    </nav>
    <div class="columns">
        <div class="column list is-hoverable is-shadowless" id="tree"></div>
        <div class="maincont column is-three-quarters has-background-success">
        <div class="showq">
        </div>
        
        </div>
    </div>


</body>
<script src="/js/tree.js"></script>
<script src="/js/treeselect.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dragula/3.7.2/dragula.js" integrity="sha256-rVf3H94DblhP4Z6wLSa2mpMwRS5qePBWykE6QWPOaO0=" crossorigin="anonymous"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="https://code.jquery.com/jquery-1.11.1.js"></script>
<script>
    let chapters = <%-JSON.stringify(chapter) %> ;
    let questions = <%-JSON.stringify(question) %> ;
    let allquestions = <%-JSON.stringify(question) %> ;

    generateTree(chapters, questions);
    setClickEventOnTreeItems();
    

    
    
    
    function showq(e){
        let cont = $(".maincont");
        let result = $.grep(allquestions, function(ev){ return ev._id == e.id; })[0];
        console.log(result)
        if(result.type=="open"){
            cont.html(`<div class="showq">
            <div>Etykieta pytania</div>
            <div>`+result.name+`</div>
            <div>Treść pytania</div>
            <div>`+result.content+`</div>            
        </div>`)
            
        }else if(result.type=="single"){
            let ans = '';
            let correct = "";
         for(let i = 0;i<result.option.length;i++){
            if(result.option[i]==result.correct){
                  correct = "   --Poprawna odpowiedź--";
              }else{
                  correct = "";
              }
              ans += `<div>Opdpowiedź `+(i+1)+`.</div>
             <div>`+result.option[i]+correct+`</div>`;

         }
            cont.html(`<div class="showq">
            <div>Etykieta pytania</div>
            <div>`+result.name+`</div>
            <div>Treść pytania</div>
            <div>`+result.content+`</div>            
            `+ans+`</div>`)
            
        } else if(result.type=="multi"){
            console.log()
            let ans = '';
            let correct = "";
         for(let i = 0;i<result.option.length;i++){
            if(jQuery.inArray(result.option[i],result.correct)!=-1){
                  correct = "   --Poprawna odpowiedź--";
              }else{
                  correct = "";
              }
             console.log(correct)
              ans += `<div>Opdpowiedź `+(i+1)+`.</div>
             <div>`+result.option[i]+correct+`</div>`;

         }
            cont.html(`<div class="showq">
            <div>Etykieta pytania</div>
            <div>`+result.name+`</div>
            <div>Treść pytania</div>
            <div>`+result.content+`</div>            
            `+ans+`</div>`)
        }
    }
    
    
    
    
    
    
    
    
    
    
    
    var scroll = function (step) {
        var scrollY = $(window).scrollTop();
        $(window).scrollTop(scrollY + step);
        if (!stop) {
            setTimeout(function () { scroll(step) }, 20);
        }
    }

    // DRAG & DROP
        var stop = true;
    $("p.list-item").on("drag", function (e) {

        stop = true;

        if (e.originalEvent.clientY < 150) {
            stop = false;
            scroll(-1)
        }

        if (e.originalEvent.clientY > ($(window).height() - 150)) {
            stop = false;
            scroll(1)
        }

    });

    $("p.list-item").on("dragend", function (e) {
         stop = true;
    });
    
    let srcid;

    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        srcid = ev.srcElement.id;
    }

    function drop(ev) {
        ev.preventDefault();

        if (ev.path[3].className.includes('cont') && ev.path[1].className.includes('icon')) {
            socket.emit("move", socket.id, srcid, ev.path[3].id, `<%= user.id %>`);
        } else if (ev.path[4].className.includes('cont') && ev.path[2].className.includes('icon')) {
            socket.emit("move", socket.id, srcid, ev.path[4].id, `<%= user.id %>`);
        } else if (ev.target.className == "dir-header") {
            socket.emit("move", socket.id, srcid, ev.target.parentElement.id, `<%= user.id %>`);

        } else if (ev.target.className.includes("cont")) {
            socket.emit("move", socket.id, srcid, ev.target.id, `<%= user.id %>`);
        } else if (ev.target.className.includes("list-item")) {
            socket.emit("move", socket.id, srcid, ev.target.parentElement.parentElement.parentElement.id, `<%= user.id %>`);
        }
    }

    /////// SOCKET.IO

//    socid, name, type, content, options, correct, userid
    
    const socket = io();
    socket.on('connect', () => {
        console.log(socket.id);
    })

    function addchapter(){
        $("#err").html("");
        let errorcheck = false;
        let error = [];
        if($('#chaptername').val()==""){
            errorcheck = true;
            error.push("<div>Nazwa rozdziału jest pusta</div>");
        }
        if($('#chaptercontent').val()==""){
            errorcheck = true;
            error.push("<div>Opisz rozdziału jest pusty</div>");
        }
        if(errorcheck==false){
        socket.emit("dodaj", socket.id, $('#chaptername').val(), "addchapter", $('#chaptercontent').val(), undefined, undefined, `<%= user.id %>`);
        }else{
            $("#err").html(error);
        }
    }
    
    function addsingle(){ 
        $("#err").html("");
        let errorcheck = false;
        let error = [];
        
        
        
        let arr = [];
        $(".a").each(function(){
            arr.push(this.value)
            if(this.value==""&& errorcheck == false){
            errocheck = true;
            error.push("<div>Conajmniej jedna z odpowiedzi jest pusta</div>");  
            }
        })
                if($('#singlename').val()==""){
            errorcheck = true;
            error.push("<div>Etykieta pytania jest pusta</div>");
        }
        if($('#singlecontent').val()==""){
            errorcheck = true;
            error.push("<div>Treść pytania jest pusta</div>");
        }
        
        let ansid = $("input[name='ans']:checked").attr('id');
        console.log($("#"+ansid+"ans").val(),error)
        if($("#"+ansid+"ans").val()==undefined){
            errorcheck = true;
           error.push("<div>Nie zaznaczono poprawnej odpowiedzi</div>");
        }
        
        if(errorcheck==false){
        socket.emit("dodaj", socket.id, $('#singlename').val(), "single", $('#singlecontent').val(), arr, $("#"+ansid+"ans").val(), `<%= user.id %>`);
        }else{
            $("#err").html(error);
        }
    }
                    
    function addopen(){
        $("#err").html("");
        let errorcheck = false;
        let error = [];
        if($('#openname').val()==""){
            errorcheck = true;
            error.push("<div>Etykieta pytania jest pusta</div>");
        }
        if($('#opencontent').val()==""){
            errorcheck = true;
            error.push("<div>Treść pytania jest pusta</div>");
        }
        if(errorcheck==false){
        socket.emit("dodaj", socket.id, $('#openname').val(), "open",$('#opencontent').val(), undefined, undefined, `<%= user.id %>`);
                      }else{
            $("#err").html(error);
        }      
        }
    function addmulti(){
        $("#err").html("");
         let errorcheck = false;
        let error = [];
        let arr = [];
        let correct = [];
        $(".a").each(function(){
            arr.push(this.value);
            if(this.value==""&& errorcheck == false){
            errocheck = true;
            error.push("<div>Conajmniej jedna z odpowiedzi jest pusta</div>");  
            }
        })
        if($('#multiname').val()==""){
            errorcheck = true;
            error.push("<div>Etykieta pytania jest pusta</div>");
        }
        if($('#multicontent').val()==""){
            errorcheck = true;
            error.push("<div>Treść pytania jest pusta</div>");
        }
        
        $("input[name='ans']:checked").each(function(){
            correct.push( $("#"+this.value+"ans").val())
            
        })
        if(correct == ""){
            errorcheck = true;
            error.push("<div>Nie zaznaczono poprawnej odpowiedzi</div>");
        }
        if(errorcheck==false){
        socket.emit("dodaj", socket.id, $('#multiname').val(), "multi", $('#multicontent').val(), arr,correct, `<%= user.id %>`);
                }else{
            $("#err").html(error);
        }
        
    }
    
    function add(name, type, content, options, correct) {
        socket.emit("dodaj", socket.id, name, type, content, options, correct, `<%= user.id %>`);
                    
    }

    socket.on('cChapter', (cChapter) => {

        chapters.push(cChapter);
        $(`<div class='dir cont list-item' id="` +
            cChapter._id +
            `"ondrop="drop(event, this)" ondragover="allowDrop(event)">
    <div class='dir-header' db-id=` +
            cChapter._id +
            `>
      <span class='icon'><i class='fas fa-folder'></i></span> ` +
            cChapter.name +
            `
      <span class='icon is-pulled-right arrow'
        ><i class='fas fa-angle-right'></i
      ></span>
    </div>
    <div class='dir-items'><div class="dir-items-wrapper">
            </div></div></div>`).insertBefore('div#unassigned')

        setClickEventOnTreeItems();




    })

    socket.on('cQuestion', (question) => {
        questions.push(question);
        let div = $("#unassigned").find('.dir-items-wrapper');
        if (question.type == "open") {
           div.append(
                `<p class="list-item" id="` +
                question._id +
                `"title="` +
                question.content +
                `" draggable = 'true' ondragstart="drag(event)">
      <span class="icon"> <i class="fas fa-calendar-minus"></i> </span
      >` +
                question.name +
                `</p>`
            )
            if ($("#unassigned").hasClass("opened-item")) {
                $("#unassigned").find('.dir-items').css('height', '+=42,5');
            }
        } else if (question.type == "single") {
            div.append(
                `<p class="list-item" id="` +
                question._id +
                `"title="` +
                question.content +
                `" draggable = 'true' ondragstart="drag(event)">
      <span class="icon"> <i class="fas fa-calendar-check"></i> </span
      >` +
                question.name +
                `</p>`
            )
            if ($("#unassigned").hasClass("opened-item")) {
                $("#unassigned").find('.dir-items').css('height', '+=42,5');
            }
        } else if (question.type == "multi") {
            div.append(
                `<p class="list-item" id="` +
                question._id +
                `"title="` +
                question.content +
                `" draggable = 'true' ondragstart="drag(event)">
        <span class="icon"> <i class="fas fa-calendar-alt"></i> </span
        >` +
                question.name +
                `</p>`
            )
        }
        if ($("#unassigned").hasClass("opened-item")) {
            $("#unassigned").find('.dir-items').css('height', '+=42,5');
        }

    })

    socket.on('refreshTree', (src, target, sourcediv, newChapters, newQuestions) => {
        chapters = newChapters;
        questions = newQuestions;
        if (sourcediv != undefined) {

            const srcindex = chapters.findIndex(x => x._id === sourcediv);
            const srcdir = chapters[srcindex].questions;
            const srccontent = generateTreeItems(srcdir, questions);
            $("#" + sourcediv).find('.dir-items-wrapper').html(srccontent);
            if ($("#" + sourcediv).hasClass("opened-item")) {
                $("#" + sourcediv).find('.dir-items').css('height', '-=42,5');
            }

        } else {
            const srcdir = [];
            newQuestions.forEach(question => {
                if (!question.chapter) {
                    srcdir.push(question._id)
                }
            });
            const srccontent = generateTreeItems(srcdir, questions);
            $("#unassigned").find('.dir-items-wrapper').html(srccontent);
            if ($("#unassigned").hasClass("opened-item")) {
                $("#unassigned").find('.dir-items').css('height', '-=42,5');
            }
        }

        if (target != 'unassigned') {
            const targetindex = chapters.findIndex(x => x._id === target);
            const targetdir = chapters[targetindex].questions;
            const targetcontent = generateTreeItems(targetdir, questions);
            $("#" + target).find('.dir-items-wrapper').html(targetcontent);
            if ($("#" + target).hasClass("opened-item")) {
                $("#" + target).find('.dir-items').css('height', '+=42,5');
            }
        } else {
            const targetdir = [];
            newQuestions.forEach(question => {
                if (!question.chapter) {
                    targetdir.push(question._id)
                }
            });
            const targetcontent = generateTreeItems(targetdir, questions);
            $("#unassigned").find('.dir-items-wrapper').html(targetcontent);
            if ($("#unassigned").hasClass("opened-item")) {
                $("#unassigned").find('.dir-items').css('height', '+=42,5');
            }



        }



        
        

    })

</script>

</html>
