<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>Document</title>
    <script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>
    <link rel="stylesheet" href="/css/room.css" />
    <link rel="stylesheet" href="/css/style.css" />
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400&display=swap" rel="stylesheet">
    <link href="/css/fontawesome/css/all.css" rel="stylesheet">
    <link href="//cdn.quilljs.com/1.0.0/quill.snow.css" rel="stylesheet">
    <link href="//cdn.quilljs.com/1.0.0/quill.bubble.css" rel="stylesheet">
</head>

<body>

<!--Timer-->
<div id="timer"></div>
<!--Numer pokoju -->
<% if(room.OPEN==true && user){ %>
<div class="room">
<div class="room-title"><i class="fas fa-cog icon_mg"></i> Zarządzanie pokojem</div>
<div id="pinpokoju" class="etykieta"> Kod Klasy <br><br>
<span class="room-pin"><%= room.PIN %></span> </div><br>
<!--Lista guestów-->
<div class="etykieta"><i class="fas fa-user-friends icon_mg"></i></i> Lista gości</div><br>
<div id="guestlist"></div><br>
<button onclick="startgame()" class="startgame"><i class="fas fa-play icon_mg"></i> ROZPOCZNIJ</button>
<% }else if(room.OPEN){ %>
<!--Lista guestów-->
<div id="guestlist"></div>
</div>


<% } %>
<!--Treść pytania-->
<div id="gamequestions">
<% if(!user && room.OPEN == false){ %>
<div id="question"></div>
<div id="answers"></div>
<% if(room.time){ %>
<button onclick="changequestion(-1)">Poprzednie pytanie</button>
<% } %>
<button onclick="changequestion(1)">Następne pytanie</button>
<% } %>
</div>
</body>
<script src='https://cdnjs.cloudflare.com/ajax/libs/dragula/3.7.2/dragula.min.js'></script>
<script src="https://code.jquery.com/jquery-3.4.1.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU=" crossorigin="anonymous"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="//cdn.quilljs.com/1.3.6/quill.js"></script>
<script src="//cdn.quilljs.com/1.3.6/quill.min.js"></script>
<script>
    let room;
    let drake = dragula();
    let guestlist;
    let questions;
    let guest;
    let timerinverval;
    let checktimeinterval;
    let questionidlist = [];
    <% if(!user){ %>
    <% if( fguest.roomquestions.answer!=""){ %>
    let answers = <%-JSON.stringify(fguest.roomquestions.answer) %>;
    <% }else{ %>
    let answers = [];
    <% }}%>
    const socket = io();
            socket.on('connect', () => {
                console.log(socket.id)
                <% if(!user){ %>
                socket.emit('addSocketIDToGuest','<%= fguest._id %>',socket.id);
                <% }if(!user && room.OPEN == false){ %>
                checktimeinterval = setInterval(checktime,1000)
                timer(<%= fguest.time %>-timeremaining())
                <% }%>
                socket.emit('joinroom',"<%= room.PIN %>",<%= room.OPEN %>);

        });
    
    
    //SOCKETIO
    
    
    
    //Lista guestów
    socket.on('reloadlist',(fRoom,fGuests,fQuestions)=>{
        <% if(room.OPEN==true){ %>
        room = fRoom;
        guestlist = fGuests;
        questions = fQuestions;
        questionsidlist = [];
        if(questions){
        questions.forEach(q =>{
            questionidlist.push(q._id);
            console.log("a")
        })
        }
        $("#guestlist").html("")
        $.each(guestlist,function(){
            $("#guestlist").append(`<div>`+this.username+ <% if(user){ %>   `<button onclick="deleteguest(this)" db-id="`+this._id+`"><i class="fas fa-times"></i></button> ` +  <% } %> `</div>`)
            
        })
        <% }else{ %>
        room = fRoom;
        guestlist = fGuests;
        questions = fQuestions;
        questionsidlist = [];
        console.log(questionidlist)
        questions.forEach(q =>{
        questionidlist.push(q._id);
            
        })
        <% if(!user){ %>
        changequestion(0);
        <% }} %>
    })
    
    socket.on('Nguest',(g)=>{
        guest = g;
    })
    
    

    
    //Wyrzucenie guesta z pokoju
    <% if(user){ %> 
    function deleteguest(e){
        socket.emit('deleteguest',$(e).attr('db-id'),"<%= room.PIN %>");
    }

    <% } %>
    socket.on('leaveroom',(e)=>{
        socket.emit('leaveroom1',"<%= room.PIN %>");
        location.reload();
        
    })
    
    
    //Rozpoczęcie gry
    <% if(room.OPEN==true){ %>
    function startgame(){
        <% room.OPEN=false %>
        socket.emit('startgame',"<%= room.PIN %>","<%= room.id %>")
            
    }
    <% } %>
                    
  // Ładowanie wszystkiego                  
    socket.on('lastload',(nRoom,fQuestions)=>{
            room = nRoom;
            questions = fQuestions;
            <% if(!user){ %>
            <% if(room.time){%>
            $("#gamequestions").html(`<div id="question"></div><div id="answers"></div>
    <button onclick="changequestion(-1)">Poprzednie pytanie</button>
    <button onclick="changequestion(1)">Następne pytanie</button>`);
            $("#guestlist").remove();
            socket.emit('addtimeguest',"<%= fguest.id %>",'<%= room.time %>');
            changequestion(0);
            checktimeinterval = setInterval(checktime,1000)
            timer((<%= room.time %>*60))
            <% }else{%>
            $("#gamequestions").html(`<div id="question"></div>
    <button onclick="changequestion(1)">Następne pytanie</button>`);
            $("#guestlist").remove();
            let type = questions[0].type;
            let starttime;
            if(type=="open"){
                starttime = <%= room.opentime %>+"";
            }else if(type=="multi"||type=="single"){
                starttime = <%= room.closedtime %>+"";
            }
            changequestion(0);
            checktimeinterval = setInterval(checktime,1000)
            timer(starttime);
            <% }%>

            <% } %>
        })    
        
        
        
    //Zmiana pytania
        <% if(!user){ %>

        
        // Zmiana indexu pytania
        function changequestion(num){
    //            Odpowiedź
            let ans
            if(questions[guest.index]){
            if(questions[guest.index].type=="open"){
                if(window.quill){
                    ans = window.quill.container.firstChild.innerHTML
                    }
            }else if(questions[guest.index].type=="single"||questions[guest.index].type=="multi"){
                 ans = [];
                $(".toggle").each(function(){
                    ans.push(this.id)
                })
            }else if(questions[guest.index].type=="match"){
            ans = {
                o: [],
                a: []
            };         
                $( ".a").each(function( index ) {
                    if($(this).find('.o').length==1){
                        ans.o[index]=$(this).find('.o').attr('num');
                        ans.a.push($(this).attr('num'));
                    }else{
                        ans.a.push($(this).attr('num'));
                    }
                    
}               );
            }
            }
            if(ans){
                console.log(ans)
                answers[guest.index] = ans;
            }
            <% if(!room.time){%>
                if(num<0){
                    num = num*-1;
                }
            <% }%>
            guest.index += num;
            if(guest.index<0){
                guest.index = 0;
            }
            if(guest.index>=questions.length){
                <% if(room.time){ %>
                guest.index = questions.length-1;
                <%}else{ %>
                // KONIEC Testu
                    clearInterval(checktimeinterval);
                    clearInterval(timerinverval)
                    $("#gamequestions").html('')
                    return false;
                <% } %>
            }
            console.log(questions[guest.index]);
            //WYŚWITLANIE PYTANIA                         WĄŻŃĘ////////////////////////////////////////////
            $("#question").html(questions[guest.index].content);
            if(questions[guest.index].type=="single"||questions[guest.index].type=="multi"){
                $("#answers").html("");
                let optionindex=0;
                questions[guest.index].option.forEach(option=>{
                    $("#answers").append("<div onclick=check(this,'"+questions[guest.index].type+"') id="+optionindex+">"+option+"</div>");
                    optionindex++;
                })
                if(answers[guest.index]){
                    answers[guest.index].forEach(qid=>{
                        $("#"+qid).addClass("toggle");
                    })
                }
            }else if(questions[guest.index].type=="open"){
                
                if(answers[guest.index]){
                    $("#answers").html(`<div id='quillopen'>`+answers[guest.index]+`</div>`);
                }else{
                    $("#answers").html(`<div id='quillopen'></div>`);
                }
                quil("quillopen");
            }else if(questions[guest.index].type=='match'){
                if(answers[guest.index]){
                    $('#answers').html(`<div id='matchq'></div><div id='matchans'></div>`);
                questions[guest.index].correct.forEach((correct,i)=>{
                    let index = i+1;
                    let ind = $.inArray(index.toString(), answers[guest.index].a);
                    if(ind!= -1&&answers[guest.index].o[ind]){
                        $("#matchans").append(`<div class='a' num="`+index+`">`+correct+`<div class='matchdrop'>`+`<div class='o' num="`+answers[guest.index].o[ind]+`">`+questions[guest.index].option[answers[guest.index].o[ind]-1]+`</div>`+`</div></div>`)
                    }else{
                       $("#matchans").append(`<div class='a' num="`+index+`">`+correct+`<div class='matchdrop'></div></div>`) 
                    }
                    
                })
                    if(questions[guest.index].fake){
                    fak = questions[guest.index].fake;
                    console.log(fak)
                    if(fak.typ=="fakeans"){
                        
                    }else if(fak.typ=="fakematch"){
                        console.log()
                        if($.inArray("0",answers[guest.index].a)!=-1){
                             $("#matchans").append(`<div class='a' num="0">`+fak.content+`<div class='matchdrop'>`+`<div class='o' num="`+$.inArray("0",answers[guest.index].a)+`">`+questions[guest.index].option[$.inArray("0",answers[guest.index].a)-1]+`</div>`+`</div>`)
                        }else{
                            $("#matchans").append(`<div class='a' num="0">`+fak.content+`<div class='matchdrop'></div>`)
                        }
                        
                    }
                }  
                   questions[guest.index].option.forEach((option,i)=>{                       
                    let index = i+1;
                       if($('.o[num="'+index+'"]').length==0){
                           $("#matchq").append(`<div class='o' num="`+index+`">`+option+`</div>`)
                       }
                })    

                }else{
                $('#answers').html(`<div id='matchq'></div><div id='matchans'></div>`);
                questions[guest.index].option.forEach((option,i)=>{
                    let index = i+1;
                    $("#matchq").append(`<div class='o' num="`+index+`">`+option+`</div>`)
                })                
                questions[guest.index].correct.forEach((correct,i)=>{
                    let index = i+1;
                    $("#matchans").append(`<div class='a' num="`+index+`">`+correct+`<div class='matchdrop'></div></div>`)
                })
                if(questions[guest.index].fake){
                    fak = questions[guest.index].fake;
                    console.log(fak)
                    if(fak.typ=="fakeans"){
                        $("#matchq").append(`<div class='o' num="0">`+fak.content+`</div>`)
                    }else if(fak.typ=="fakematch"){
                        $("#matchans").append(`<div class='a' num="0">`+fak.content+`<div class='matchdrop'></div>`)
                    }
                }    
                
                }
                let divarr = $(".matchdrop").toArray();
                divarr.push($("#matchq")[0]);
                dragula(divarr,{
                accepts: (el,target,source,sibling)=>{
                    if(target.className.includes('matchdrop')){
                        if(target.getElementsByTagName('div').length==0){
                            return true;
                        }else{
                            return false;
                        }
                           
                    }else{
                        return true;
                    }
        }
    });
                
            }
//            Timer
            <% if(!room.time){ %>
               if(questions[guest.index].type=='open'){
                   timer(<%= room.opentime %>)
               }else{
                   timer(<%= room.closedtime %>)
               }
            <% } %>
            

            
            
    // Emit
            socket.emit("changeindex","<%= fguest.id %>",guest.index,questions[guest.index].type,'<%= room.opentime %>','<%= room.closedtime %>','<%= room.time %>',questionidlist,answers,"<%= room.PIN %>")
            
        }
        <% } %>
    //Timer
        function timer(time){
                function changetime(){
                let min = Math.floor(time/60);
                let sec = time%60;
                $("#timer").text(min+":"+sec) 
                
                if(time<=0){
                    timeout();
                    clearInterval(timerinverval)
                }  
                    time--;
                }
                
                if(timerinverval){
                clearInterval(timerinverval);
                timerinverval=undefined;
                }
                
                timerinverval = setInterval(changetime,1000,time);
            }
            
        function checktime(){
            if(timeremaining() >guest.time){
                timeout();
            }
        }    
            
        function timeremaining(){
            let currentdate = new Date();
            return currentdate.getHours()*3600+currentdate.getMinutes()*60+currentdate.getSeconds();
        }
            
        function timeout(){

            <% if(room.time){ %>
                    clearInterval(timerinverval)
                    $("#gamequestions").html('')
           <%}else{ %>
            clearInterval(timerinverval);
            changequestion(1);
            
            <% } %>
        }
            // Zaznaczanie dobrej odpowiedzi
            function check(e,type){    
                if(type=="single"&& $(".toggle").length==1){
                    $(".toggle").toggleClass("toggle");
                }
                e.classList.toggle("toggle")
            }
            
            
            // Obiekt guest
            
            socket.on('nguestlist',(ng)=>{
                <% if(user){ %>
                
                guestlist[(guestlist.findIndex(x => x._id === ng._id))]= ng;
                <% } %>
            })
            
            
            
            
            
            

     //////////////////////////////////////////////QUILL.JS       
            
             var toolbarOptions = [
        ['bold', 'italic', 'underline', 'strike'], // toggled buttons
        ['blockquote', 'code-block'],

        [{
         'header': 1
        }, {
         'header': 2
        }], // custom button values
        [{
         'list': 'ordered'
        }, {
         'list': 'bullet'
        }],
        [{
         'script': 'sub'
        }, {
         'script': 'super'
        }], // superscript/subscript
        [{
         'indent': '-1'
        }, {
         'indent': '+1'
        }], // outdent/indent
        [{
         'direction': 'rtl'
        }], // text direction

        [{
         'size': ['small', false, 'large', 'huge']
        }], // custom dropdown
        [{
         'header': [1, 2, 3, 4, 5, 6, false]
        }],

        [{
         'color': []
        }, {
         'background': []
        }], // dropdown with defaults from theme
        [{
         'font': []
        }],
        [{
         'align': []
        }],

        ['clean'] // remove formatting button
    ];

    function quil(e) {
     var cont = document.getElementById(e)
     window.quill = new Quill(cont, {
         modules: {
             toolbar: toolbarOptions
         },
         theme: 'snow'
     });
 }
            
</script>

</html>
